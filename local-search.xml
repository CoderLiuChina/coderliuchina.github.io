<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何使用Cloudflare Pages搭建无限流量梯子</title>
    <link href="/2024/11/23/2024_11_23/"/>
    <url>/2024/11/23/2024_11_23/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇博客考虑到使用Azure搭梯子较为麻烦，虽然梯子质量高但是上手门槛也高，所以这里写一篇利用Cloudflare搭梯子的教程指路贴，相比上一篇教程更简单，但是梯子质量不如上一篇的好。</p><h1 id="提醒"><a href="#提醒" class="headerlink" title="提醒"></a>提醒</h1><p>本文需要对文件后缀名有认知，知道如何修改文件后缀名</p><h1 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h1><p>利用Cloudflare Pages搭建梯子，由于Cloudflare同时支持IPv4和IPv6访问，所以存在免流的可行性</p><h1 id="教程正文"><a href="#教程正文" class="headerlink" title="教程正文"></a>教程正文</h1><p>本教程完全基于此文章，作为笔者阅读此教程遇到的难点补充，可能需要较好的网络环境<br><a href="https://jiyiren.github.io/2024/06/16/cloudflare_vless/">教程传送门</a></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>文中下载<code>worker.zip</code>的链接可能打不开，如果打不开请创建一个文件，名为<code>_worker.js</code>，然后将以下代码粘贴到文件中，并将该文件打包压缩为<code>worker.zip</code></p><p><strong>长代码警告，共952行</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// &lt;!--GAMFC--&gt;version base on commit 43fad05dcdae3b723c53c226f8181fc5bd47223e, time is 2023-06-22 15:20:05 UTC&lt;!--GAMFC-END--&gt;.</span><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;cloudflare:sockets&#x27;</span>;<br><br><span class="hljs-comment">// How to generate your own UUID:</span><br><span class="hljs-comment">// [Windows] Press &quot;Win + R&quot;, input cmd and run:  Powershell -NoExit -Command &quot;[guid]::NewGuid()&quot;</span><br><span class="hljs-keyword">let</span> userID = <span class="hljs-string">&#x27;90cd4a77-141a-43c9-991b-08263cfe9c10&#x27;</span>;<br><br><span class="hljs-keyword">let</span> proxyIP = <span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-comment">// 小白勿动，该地址并不影响你的网速，这是给CF代理使用的。&#x27;cdn.xn--b6gac.eu.org&#x27;, &#x27;cdn-all.xn--b6gac.eu.org&#x27;, &#x27;edgetunnel.anycast.eu.org&#x27;</span><br><br><span class="hljs-comment">//let sub = &#x27;&#x27;;// 留空则显示原版内容</span><br><span class="hljs-keyword">let</span> sub = <span class="hljs-string">&#x27;sub.cmliussss.workers.dev&#x27;</span>;<span class="hljs-comment">// 内置优选订阅生成器，可自行搭建 https://github.com/cmliu/WorkerVless2sub</span><br><span class="hljs-keyword">let</span> subconverter = <span class="hljs-string">&#x27;api.v1.mk&#x27;</span>;<span class="hljs-comment">// clash订阅转换后端，目前使用肥羊的订阅转换功能。支持自建psub 可自行搭建https://github.com/bulianglin/psub</span><br><span class="hljs-keyword">let</span> subconfig = <span class="hljs-string">&quot;https://raw.githubusercontent.com/cmliu/ACL4SSR/main/Clash/config/ACL4SSR_Online_Full_MultiMode.ini&quot;</span>; <span class="hljs-comment">//订阅配置文件</span><br><span class="hljs-comment">// The user name and password do not contain special characters</span><br><span class="hljs-comment">// Setting the address will ignore proxyIP</span><br><span class="hljs-comment">// Example:  user:pass@host:port  or  host:port</span><br><span class="hljs-keyword">let</span> socks5Address = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">let</span> <span class="hljs-title class_">RproxyIP</span> = <span class="hljs-string">&#x27;false&#x27;</span>;<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isValidUUID</span>(userID)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;uuid is not valid&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">let</span> parsedSocks5Address = &#123;&#125;; <br><span class="hljs-keyword">let</span> enableSocks = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">// 虚假uuid和hostname，用于发送给配置生成服务</span><br><span class="hljs-keyword">let</span> fakeUserID = <span class="hljs-title function_">generateUUID</span>();<br><span class="hljs-keyword">let</span> fakeHostName = <span class="hljs-title function_">generateRandomString</span>();<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Request</span>&#125; <span class="hljs-variable">request</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">&#123;UUID: string, PROXYIP: string</span>&#125;&#125; env</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).ExecutionContext</span>&#125; <span class="hljs-variable">ctx</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;Response&gt;</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params">request, env, ctx</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> userAgent = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;User-Agent&#x27;</span>).<span class="hljs-title function_">toLowerCase</span>();<br>userID = env.<span class="hljs-property">UUID</span> || userID;<br>proxyIP = env.<span class="hljs-property">PROXYIP</span> || proxyIP;<br>socks5Address = env.<span class="hljs-property">SOCKS5</span> || socks5Address;<br>sub = env.<span class="hljs-property">SUB</span> || sub;<br>subconverter = env.<span class="hljs-property">SUBAPI</span> || subconverter;<br>subconfig = env.<span class="hljs-property">SUBCONFIG</span> || subconfig;<br><span class="hljs-comment">//RproxyIP = env.RPROXYIP || !proxyIP ? &#x27;true&#x27; : &#x27;false&#x27;;</span><br><span class="hljs-keyword">if</span> (socks5Address) &#123;<br><span class="hljs-title class_">RproxyIP</span> = env.<span class="hljs-property">RPROXYIP</span> || <span class="hljs-string">&#x27;false&#x27;</span>;<br><span class="hljs-keyword">try</span> &#123;<br>parsedSocks5Address = <span class="hljs-title function_">socks5AddressParser</span>(socks5Address);<br>enableSocks = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">catch</span> (err) &#123;<br>  <span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">Error</span>&#125; */</span> <span class="hljs-keyword">let</span> e = err;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-title function_">toString</span>());<br>enableSocks = <span class="hljs-literal">false</span>;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-title class_">RproxyIP</span> = env.<span class="hljs-property">RPROXYIP</span> || !proxyIP ? <span class="hljs-string">&#x27;true&#x27;</span> : <span class="hljs-string">&#x27;false&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">const</span> upgradeHeader = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;Upgrade&#x27;</span>);<br><span class="hljs-keyword">const</span> url = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(request.<span class="hljs-property">url</span>);<br><span class="hljs-keyword">if</span> (!upgradeHeader || upgradeHeader !== <span class="hljs-string">&#x27;websocket&#x27;</span>) &#123;<br><span class="hljs-comment">// const url = new URL(request.url);</span><br><span class="hljs-keyword">switch</span> (url.<span class="hljs-property">pathname</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(request.<span class="hljs-property">cf</span>), &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">200</span> &#125;);<br><span class="hljs-keyword">case</span> <span class="hljs-string">`/<span class="hljs-subst">$&#123;userID&#125;</span>`</span>: &#123;<br><span class="hljs-keyword">const</span> vlessConfig = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getVLESSConfig</span>(userID, request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;Host&#x27;</span>), sub, userAgent, <span class="hljs-title class_">RproxyIP</span>);<br><span class="hljs-keyword">const</span> now = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();<br><span class="hljs-keyword">const</span> timestamp = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(now / <span class="hljs-number">1000</span>);<br><span class="hljs-keyword">const</span> today = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(now);<br>today.<span class="hljs-title function_">setHours</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (userAgent &amp;&amp; userAgent.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;mozilla&#x27;</span>))&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;vlessConfig&#125;</span>`</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain;charset=utf-8&quot;</span>,<br>&#125;<br>&#125;);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;vlessConfig&#125;</span>`</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&quot;Content-Disposition&quot;</span>: <span class="hljs-string">&quot;attachment; filename=edgetunnel; filename*=utf-8&#x27;&#x27;edgetunnel&quot;</span>,<br><span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain;charset=utf-8&quot;</span>,<br><span class="hljs-string">&quot;Profile-Update-Interval&quot;</span>: <span class="hljs-string">&quot;6&quot;</span>,<br><span class="hljs-string">&quot;Subscription-Userinfo&quot;</span>: <span class="hljs-string">`upload=0; download=<span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.floor(((now - today.getTime())/<span class="hljs-number">86400000</span>) * <span class="hljs-number">24</span> * <span class="hljs-number">1099511627776</span>)&#125;</span>; total=<span class="hljs-subst">$&#123;<span class="hljs-number">24</span> * <span class="hljs-number">1099511627776</span>&#125;</span>; expire=<span class="hljs-subst">$&#123;timestamp&#125;</span>`</span>,<br>&#125;<br>&#125;);<br>&#125;<br>&#125;<br><span class="hljs-attr">default</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">&#x27;Not found&#x27;</span>, &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">404</span> &#125;);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&#x27;/proxyip=&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>).<span class="hljs-title function_">test</span>(url.<span class="hljs-property">pathname</span>)) proxyIP = url.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&#x27;/proxyip.&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>).<span class="hljs-title function_">test</span>(url.<span class="hljs-property">pathname</span>)) proxyIP = url.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/proxyip.&quot;</span>)[<span class="hljs-number">1</span>];<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!proxyIP || proxyIP == <span class="hljs-string">&#x27;&#x27;</span>) proxyIP = <span class="hljs-string">&#x27;proxyip.fxxk.dedyn.io&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">vlessOverWSHandler</span>(request);<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (err) &#123;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">Error</span>&#125; */</span> <span class="hljs-keyword">let</span> e = err;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(e.<span class="hljs-title function_">toString</span>());<br>&#125;<br>&#125;,<br>&#125;;<br><br><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Request</span>&#125; <span class="hljs-variable">request</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">vlessOverWSHandler</span>(<span class="hljs-params">request</span>) &#123;<br><br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket[]</span>&#125; */</span><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-keyword">const</span> webSocketPair = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocketPair</span>();<br><span class="hljs-keyword">const</span> [client, webSocket] = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">values</span>(webSocketPair);<br><br>webSocket.<span class="hljs-title function_">accept</span>();<br><br><span class="hljs-keyword">let</span> address = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">let</span> portWithRandomLog = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">log</span> = (<span class="hljs-params"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">string</span>&#125; */</span> info, <span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">string | undefined</span>&#125; */</span> event</span>) =&gt; &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[<span class="hljs-subst">$&#123;address&#125;</span>:<span class="hljs-subst">$&#123;portWithRandomLog&#125;</span>] <span class="hljs-subst">$&#123;info&#125;</span>`</span>, event || <span class="hljs-string">&#x27;&#x27;</span>);<br>&#125;;<br><span class="hljs-keyword">const</span> earlyDataHeader = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;sec-websocket-protocol&#x27;</span>) || <span class="hljs-string">&#x27;&#x27;</span>;<br><br><span class="hljs-keyword">const</span> readableWebSocketStream = <span class="hljs-title function_">makeReadableWebSocketStream</span>(webSocket, earlyDataHeader, log);<br><br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">&#123; value: import(&quot;@cloudflare/workers-types&quot;).Socket | null</span>&#125;&#125;*/</span><br><span class="hljs-keyword">let</span> remoteSocketWapper = &#123;<br><span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,<br>&#125;;<br><span class="hljs-keyword">let</span> isDns = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">// ws --&gt; remote</span><br>readableWebSocketStream.<span class="hljs-title function_">pipeTo</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br><span class="hljs-keyword">if</span> (isDns) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">handleDNSQuery</span>(chunk, webSocket, <span class="hljs-literal">null</span>, log);<br>&#125;<br><span class="hljs-keyword">if</span> (remoteSocketWapper.<span class="hljs-property">value</span>) &#123;<br><span class="hljs-keyword">const</span> writer = remoteSocketWapper.<span class="hljs-property">value</span>.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>()<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(chunk);<br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">const</span> &#123;<br>hasError,<br>message,<br>addressType,<br>portRemote = <span class="hljs-number">443</span>,<br>addressRemote = <span class="hljs-string">&#x27;&#x27;</span>,<br>rawDataIndex,<br>vlessVersion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]),<br>isUDP,<br>&#125; = <span class="hljs-title function_">processVlessHeader</span>(chunk, userID);<br>address = addressRemote;<br>portWithRandomLog = <span class="hljs-string">`<span class="hljs-subst">$&#123;portRemote&#125;</span>--<span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.random()&#125;</span> <span class="hljs-subst">$&#123;isUDP ? <span class="hljs-string">&#x27;udp &#x27;</span> : <span class="hljs-string">&#x27;tcp &#x27;</span></span></span><br><span class="hljs-subst"><span class="hljs-string">&#125;</span> `</span>;<br><span class="hljs-keyword">if</span> (hasError) &#123;<br><span class="hljs-comment">// controller.error(message);</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(message); <span class="hljs-comment">// cf seems has bug, controller.error will not end stream</span><br><span class="hljs-comment">// webSocket.close(1000, message);</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-comment">// if UDP but port not DNS port, close it</span><br><span class="hljs-keyword">if</span> (isUDP) &#123;<br><span class="hljs-keyword">if</span> (portRemote === <span class="hljs-number">53</span>) &#123;<br>isDns = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// controller.error(&#x27;UDP proxy only enable for DNS which is port 53&#x27;);</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;UDP proxy only enable for DNS which is port 53&#x27;</span>); <span class="hljs-comment">// cf seems has bug, controller.error will not end stream</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br><span class="hljs-comment">// [&quot;version&quot;, &quot;附加信息长度 N&quot;]</span><br><span class="hljs-keyword">const</span> vlessResponseHeader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([vlessVersion[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>]);<br><span class="hljs-keyword">const</span> rawClientData = chunk.<span class="hljs-title function_">slice</span>(rawDataIndex);<br><br><span class="hljs-keyword">if</span> (isDns) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">handleDNSQuery</span>(rawClientData, webSocket, vlessResponseHeader, log);<br>&#125;<br><span class="hljs-title function_">handleTCPOutBound</span>(remoteSocketWapper, addressType, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log);<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`readableWebSocketStream is close`</span>);<br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`readableWebSocketStream is abort`</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(reason));<br>&#125;,<br>&#125;)).<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;readableWebSocketStream pipeTo error&#x27;</span>, err);<br>&#125;);<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-literal">null</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">101</span>,<br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-attr">webSocket</span>: client,<br>&#125;);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Handles outbound TCP connections.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">any</span>&#125; <span class="hljs-variable">remoteSocket</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; addressType The remote address type to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; addressRemote The remote address to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; portRemote The remote port to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; rawClientData The raw client data to write.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket The WebSocket to pass the remote socket to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; vlessResponseHeader The VLESS response header.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">function</span>&#125; log The logging function.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;void&gt;</span>&#125; The remote socket.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleTCPOutBound</span>(<span class="hljs-params">remoteSocket, addressType, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log,</span>) &#123;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">connectAndWrite</span>(<span class="hljs-params">address, port, socks = <span class="hljs-literal">false</span></span>) &#123;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; */</span><br><span class="hljs-keyword">const</span> tcpSocket = socks ? <span class="hljs-keyword">await</span> <span class="hljs-title function_">socks5Connect</span>(addressType, address, port, log)<br>: <span class="hljs-title function_">connect</span>(&#123;<br><span class="hljs-attr">hostname</span>: address,<br><span class="hljs-attr">port</span>: port,<br>&#125;);<br>remoteSocket.<span class="hljs-property">value</span> = tcpSocket;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`connected to <span class="hljs-subst">$&#123;address&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br><span class="hljs-keyword">const</span> writer = tcpSocket.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(rawClientData); <span class="hljs-comment">// first write, normal is tls client hello</span><br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span> tcpSocket;<br>&#125;<br><br><span class="hljs-comment">// if the cf connect tcp socket have no incoming data, we retry to redirect ip</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">retry</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (enableSocks) &#123;<br>tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(addressRemote, portRemote, <span class="hljs-literal">true</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(proxyIP || addressRemote, portRemote);<br>&#125;<br><span class="hljs-comment">// no matter retry success or not, close websocket</span><br>tcpSocket.<span class="hljs-property">closed</span>.<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;retry tcpSocket closed error&#x27;</span>, error);<br>&#125;).<span class="hljs-title function_">finally</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocket);<br>&#125;)<br><span class="hljs-title function_">remoteSocketToWS</span>(tcpSocket, webSocket, vlessResponseHeader, <span class="hljs-literal">null</span>, log);<br>&#125;<br><br><span class="hljs-keyword">let</span> tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(addressRemote, portRemote);<br><br><span class="hljs-comment">// when remoteSocket is ready, pass to websocket</span><br><span class="hljs-comment">// remote--&gt; ws</span><br><span class="hljs-title function_">remoteSocketToWS</span>(tcpSocket, webSocket, vlessResponseHeader, retry, log);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; <span class="hljs-variable">webSocketServer</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; earlyDataHeader for ws 0rtt</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(info: string)=&gt; void</span>&#125; log for ws 0rtt</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeReadableWebSocketStream</span>(<span class="hljs-params">webSocketServer, earlyDataHeader, log</span>) &#123;<br><span class="hljs-keyword">let</span> readableStreamCancel = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">const</span> stream = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReadableStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params">controller</span>) &#123;<br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">const</span> message = event.<span class="hljs-property">data</span>;<br>controller.<span class="hljs-title function_">enqueue</span>(message);<br>&#125;);<br><br><span class="hljs-comment">// The event means that the client closed the client -&gt; server stream.</span><br><span class="hljs-comment">// However, the server -&gt; client stream is still open until you call close() on the server side.</span><br><span class="hljs-comment">// The WebSocket protocol says that a separate close message must be sent in each direction to fully close the socket.</span><br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-comment">// client send close, need close server</span><br><span class="hljs-comment">// if stream is cancel, skip controller.close</span><br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocketServer);<br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>controller.<span class="hljs-title function_">close</span>();<br>&#125;<br>);<br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;webSocketServer has error&#x27;</span>);<br>controller.<span class="hljs-title function_">error</span>(err);<br>&#125;<br>);<br><span class="hljs-comment">// for ws 0rtt</span><br><span class="hljs-keyword">const</span> &#123; earlyData, error &#125; = <span class="hljs-title function_">base64ToArrayBuffer</span>(earlyDataHeader);<br><span class="hljs-keyword">if</span> (error) &#123;<br>controller.<span class="hljs-title function_">error</span>(error);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (earlyData) &#123;<br>controller.<span class="hljs-title function_">enqueue</span>(earlyData);<br>&#125;<br>&#125;,<br><br><span class="hljs-title function_">pull</span>(<span class="hljs-params">controller</span>) &#123;<br><span class="hljs-comment">// if ws can stop read if stream is full, we can implement backpressure</span><br><span class="hljs-comment">// https://streams.spec.whatwg.org/#example-rs-push-backpressure</span><br>&#125;,<br><span class="hljs-title function_">cancel</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-comment">// 1. pipe WritableStream has error, this cancel will called, so ws handle server close into here</span><br><span class="hljs-comment">// 2. if readableStream is cancel, all controller.close/enqueue need skip,</span><br><span class="hljs-comment">// 3. but from testing controller.error still work even if readableStream is cancel</span><br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`ReadableStream was canceled, due to <span class="hljs-subst">$&#123;reason&#125;</span>`</span>)<br>readableStreamCancel = <span class="hljs-literal">true</span>;<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocketServer);<br>&#125;<br>&#125;);<br><br><span class="hljs-keyword">return</span> stream;<br><br>&#125;<br><br><span class="hljs-comment">// https://xtls.github.io/development/protocols/vless.html</span><br><span class="hljs-comment">// https://github.com/zizifn/excalidraw-backup/blob/main/v2ray-protocol.excalidraw</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type"> ArrayBuffer</span>&#125; vlessBuffer </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; userID </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processVlessHeader</span>(<span class="hljs-params"></span><br><span class="hljs-params">vlessBuffer,</span><br><span class="hljs-params">userID</span><br><span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (vlessBuffer.<span class="hljs-property">byteLength</span> &lt; <span class="hljs-number">24</span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;invalid data&#x27;</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">const</span> version = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>));<br><span class="hljs-keyword">let</span> isValidUser = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> isUDP = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_">stringify</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>))) === userID) &#123;<br>isValidUser = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (!isValidUser) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;invalid user&#x27;</span>,<br>&#125;;<br>&#125;<br><br><span class="hljs-keyword">const</span> optLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">17</span>, <span class="hljs-number">18</span>))[<span class="hljs-number">0</span>];<br><span class="hljs-comment">//skip opt for now</span><br><br><span class="hljs-keyword">const</span> command = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">18</span> + optLength, <span class="hljs-number">18</span> + optLength + <span class="hljs-number">1</span>)<br>)[<span class="hljs-number">0</span>];<br><br><span class="hljs-comment">// 0x01 TCP</span><br><span class="hljs-comment">// 0x02 UDP</span><br><span class="hljs-comment">// 0x03 MUX</span><br><span class="hljs-keyword">if</span> (command === <span class="hljs-number">1</span>) &#123;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (command === <span class="hljs-number">2</span>) &#123;<br>isUDP = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`command <span class="hljs-subst">$&#123;command&#125;</span> is not support, command 01-tcp,02-udp,03-mux`</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">const</span> portIndex = <span class="hljs-number">18</span> + optLength + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> portBuffer = vlessBuffer.<span class="hljs-title function_">slice</span>(portIndex, portIndex + <span class="hljs-number">2</span>);<br><span class="hljs-comment">// port is big-Endian in raw data etc 80 == 0x005d</span><br><span class="hljs-keyword">const</span> portRemote = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(portBuffer).<span class="hljs-title function_">getUint16</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">let</span> addressIndex = portIndex + <span class="hljs-number">2</span>;<br><span class="hljs-keyword">const</span> addressBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressIndex, addressIndex + <span class="hljs-number">1</span>)<br>);<br><br><span class="hljs-comment">// 1--&gt; ipv4  addressLength =4</span><br><span class="hljs-comment">// 2--&gt; domain name addressLength=addressBuffer[1]</span><br><span class="hljs-comment">// 3--&gt; ipv6  addressLength =16</span><br><span class="hljs-keyword">const</span> addressType = addressBuffer[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">let</span> addressLength = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> addressValueIndex = addressIndex + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">let</span> addressValue = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">switch</span> (addressType) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>addressLength = <span class="hljs-number">4</span>;<br>addressValue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>addressLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + <span class="hljs-number">1</span>)<br>)[<span class="hljs-number">0</span>];<br>addressValueIndex += <span class="hljs-number">1</span>;<br>addressValue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextDecoder</span>().<span class="hljs-title function_">decode</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>addressLength = <span class="hljs-number">16</span>;<br><span class="hljs-keyword">const</span> dataView = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>);<br><span class="hljs-comment">// 2001:0db8:85a3:0000:0000:8a2e:0370:7334</span><br><span class="hljs-keyword">const</span> ipv6 = [];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>ipv6.<span class="hljs-title function_">push</span>(dataView.<span class="hljs-title function_">getUint16</span>(i * <span class="hljs-number">2</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>&#125;<br>addressValue = ipv6.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;:&#x27;</span>);<br><span class="hljs-comment">// seems no need add [] for ipv6</span><br><span class="hljs-keyword">break</span>;<br><span class="hljs-attr">default</span>:<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`invild  addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">if</span> (!addressValue) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`addressValue is empty, addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>,<br>&#125;;<br>&#125;<br><br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">addressRemote</span>: addressValue,<br>addressType,<br>portRemote,<br><span class="hljs-attr">rawDataIndex</span>: addressValueIndex + addressLength,<br><span class="hljs-attr">vlessVersion</span>: version,<br>isUDP,<br>&#125;;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; remoteSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; vlessResponseHeader </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(() =&gt; Promise&lt;void&gt;) | null</span>&#125; <span class="hljs-variable">retry</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">*</span>&#125; log </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">remoteSocketToWS</span>(<span class="hljs-params">remoteSocket, webSocket, vlessResponseHeader, retry, log</span>) &#123;<br><span class="hljs-comment">// remote--&gt; ws</span><br><span class="hljs-keyword">let</span> remoteChunkCount = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> chunks = [];<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">ArrayBuffer | null</span>&#125; */</span><br><span class="hljs-keyword">let</span> vlessHeader = vlessResponseHeader;<br><span class="hljs-keyword">let</span> hasIncomingData = <span class="hljs-literal">false</span>; <span class="hljs-comment">// check if remoteSocket has incoming data</span><br><span class="hljs-keyword">await</span> remoteSocket.<span class="hljs-property">readable</span><br>.<span class="hljs-title function_">pipeTo</span>(<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>&#125;,<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; chunk </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">*</span>&#125; controller </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br>hasIncomingData = <span class="hljs-literal">true</span>;<br><span class="hljs-comment">// remoteChunkCount++;</span><br><span class="hljs-keyword">if</span> (webSocket.<span class="hljs-property">readyState</span> !== <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span>) &#123;<br>controller.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">&#x27;webSocket.readyState is not open, maybe close&#x27;</span><br>);<br>&#125;<br><span class="hljs-keyword">if</span> (vlessHeader) &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([vlessHeader, chunk]).<span class="hljs-title function_">arrayBuffer</span>());<br>vlessHeader = <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// seems no need rate limit this, CF seems fix this??..</span><br><span class="hljs-comment">// if (remoteChunkCount &gt; 20000) &#123;</span><br><span class="hljs-comment">// // cf one package is 4096 byte(4kb),  4096 * 20000 = 80M</span><br><span class="hljs-comment">// await delay(1);</span><br><span class="hljs-comment">// &#125;</span><br>webSocket.<span class="hljs-title function_">send</span>(chunk);<br>&#125;<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`remoteConnection!.readable is close with hasIncomingData is <span class="hljs-subst">$&#123;hasIncomingData&#125;</span>`</span>);<br><span class="hljs-comment">// safeCloseWebSocket(webSocket); // no need server close websocket frist for some case will casue HTTP ERR_CONTENT_LENGTH_MISMATCH issue, client will send close event anyway.</span><br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`remoteConnection!.readable abort`</span>, reason);<br>&#125;,<br>&#125;)<br>)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">`remoteSocketToWS has exception `</span>,<br>error.<span class="hljs-property">stack</span> || error<br>);<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocket);<br>&#125;);<br><br><span class="hljs-comment">// seems is cf connect socket have error,</span><br><span class="hljs-comment">// 1. Socket.closed will have error</span><br><span class="hljs-comment">// 2. Socket.readable will be close without any data coming</span><br><span class="hljs-keyword">if</span> (hasIncomingData === <span class="hljs-literal">false</span> &amp;&amp; retry) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`retry`</span>)<br><span class="hljs-title function_">retry</span>();<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; base64Str </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">base64ToArrayBuffer</span>(<span class="hljs-params">base64Str</span>) &#123;<br><span class="hljs-keyword">if</span> (!base64Str) &#123;<br><span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span> &#125;;<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// go use modified Base64 for URL rfc4648 which js atob not support</span><br>base64Str = base64Str.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/-/g</span>, <span class="hljs-string">&#x27;+&#x27;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/_/g</span>, <span class="hljs-string">&#x27;/&#x27;</span>);<br><span class="hljs-keyword">const</span> decode = <span class="hljs-title function_">atob</span>(base64Str);<br><span class="hljs-keyword">const</span> arryBuffer = <span class="hljs-title class_">Uint8Array</span>.<span class="hljs-title function_">from</span>(decode, <span class="hljs-function">(<span class="hljs-params">c</span>) =&gt;</span> c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>));<br><span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">earlyData</span>: arryBuffer.<span class="hljs-property">buffer</span>, <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span> &#125;;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-keyword">return</span> &#123; error &#125;;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This is not real UUID validation</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; uuid </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isValidUUID</span>(<span class="hljs-params">uuid</span>) &#123;<br><span class="hljs-keyword">const</span> uuidRegex = <span class="hljs-regexp">/^[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[4][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;$/i</span>;<br><span class="hljs-keyword">return</span> uuidRegex.<span class="hljs-title function_">test</span>(uuid);<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span> = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">WS_READY_STATE_CLOSING</span> = <span class="hljs-number">2</span>;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Normally, WebSocket will not has exceptions when close.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; <span class="hljs-variable">socket</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">safeCloseWebSocket</span>(<span class="hljs-params">socket</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">if</span> (socket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span> || socket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_CLOSING</span>) &#123;<br>socket.<span class="hljs-title function_">close</span>();<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;safeCloseWebSocket error&#x27;</span>, error);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> byteToHex = [];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; ++i) &#123;<br>byteToHex.<span class="hljs-title function_">push</span>((i + <span class="hljs-number">256</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>));<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">unsafeStringify</span>(<span class="hljs-params">arr, offset = <span class="hljs-number">0</span></span>) &#123;<br><span class="hljs-keyword">return</span> (byteToHex[arr[offset + <span class="hljs-number">0</span>]] + byteToHex[arr[offset + <span class="hljs-number">1</span>]] + byteToHex[arr[offset + <span class="hljs-number">2</span>]] + byteToHex[arr[offset + <span class="hljs-number">3</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">4</span>]] + byteToHex[arr[offset + <span class="hljs-number">5</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">6</span>]] + byteToHex[arr[offset + <span class="hljs-number">7</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">8</span>]] + byteToHex[arr[offset + <span class="hljs-number">9</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">10</span>]] + byteToHex[arr[offset + <span class="hljs-number">11</span>]] + byteToHex[arr[offset + <span class="hljs-number">12</span>]] + byteToHex[arr[offset + <span class="hljs-number">13</span>]] + byteToHex[arr[offset + <span class="hljs-number">14</span>]] + byteToHex[arr[offset + <span class="hljs-number">15</span>]]).<span class="hljs-title function_">toLowerCase</span>();<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">stringify</span>(<span class="hljs-params">arr, offset = <span class="hljs-number">0</span></span>) &#123;<br><span class="hljs-keyword">const</span> uuid = <span class="hljs-title function_">unsafeStringify</span>(arr, offset);<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isValidUUID</span>(uuid)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;Stringified UUID is invalid&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> uuid;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; udpChunk </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; vlessResponseHeader </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(string)=&gt; void</span>&#125; log </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleDNSQuery</span>(<span class="hljs-params">udpChunk, webSocket, vlessResponseHeader, log</span>) &#123;<br><span class="hljs-comment">// no matter which DNS server client send, we alwasy use hard code one.</span><br><span class="hljs-comment">// beacsue someof DNS server is not support DNS over TCP</span><br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> dnsServer = <span class="hljs-string">&#x27;8.8.4.4&#x27;</span>; <span class="hljs-comment">// change to 1.1.1.1 after cf fix connect own ip bug</span><br><span class="hljs-keyword">const</span> dnsPort = <span class="hljs-number">53</span>;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">ArrayBuffer | null</span>&#125; */</span><br><span class="hljs-keyword">let</span> vlessHeader = vlessResponseHeader;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; */</span><br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-title function_">connect</span>(&#123;<br><span class="hljs-attr">hostname</span>: dnsServer,<br><span class="hljs-attr">port</span>: dnsPort,<br>&#125;);<br><br><span class="hljs-title function_">log</span>(<span class="hljs-string">`connected to <span class="hljs-subst">$&#123;dnsServer&#125;</span>:<span class="hljs-subst">$&#123;dnsPort&#125;</span>`</span>);<br><span class="hljs-keyword">const</span> writer = tcpSocket.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(udpChunk);<br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">await</span> tcpSocket.<span class="hljs-property">readable</span>.<span class="hljs-title function_">pipeTo</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk</span>) &#123;<br><span class="hljs-keyword">if</span> (webSocket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span>) &#123;<br><span class="hljs-keyword">if</span> (vlessHeader) &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([vlessHeader, chunk]).<span class="hljs-title function_">arrayBuffer</span>());<br>vlessHeader = <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>webSocket.<span class="hljs-title function_">send</span>(chunk);<br>&#125;<br>&#125;<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`dns server(<span class="hljs-subst">$&#123;dnsServer&#125;</span>) tcp is close`</span>);<br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`dns server(<span class="hljs-subst">$&#123;dnsServer&#125;</span>) tcp is abort`</span>, reason);<br>&#125;,<br>&#125;));<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">`handleDNSQuery have exception, error: <span class="hljs-subst">$&#123;error.message&#125;</span>`</span><br>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; <span class="hljs-variable">addressType</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">addressRemote</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; <span class="hljs-variable">portRemote</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">function</span>&#125; log The logging function.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">socks5Connect</span>(<span class="hljs-params">addressType, addressRemote, portRemote, log</span>) &#123;<br><span class="hljs-keyword">const</span> &#123; username, password, hostname, port &#125; = parsedSocks5Address;<br><span class="hljs-comment">// Connect to the SOCKS server</span><br><span class="hljs-keyword">const</span> socket = <span class="hljs-title function_">connect</span>(&#123;<br>hostname,<br>port,<br>&#125;);<br><br><span class="hljs-comment">// Request head format (Worker -&gt; Socks Server):</span><br><span class="hljs-comment">// +----+----------+----------+</span><br><span class="hljs-comment">// |VER | NMETHODS | METHODS  |</span><br><span class="hljs-comment">// +----+----------+----------+</span><br><span class="hljs-comment">// | 1  |    1     | 1 to 255 |</span><br><span class="hljs-comment">// +----+----------+----------+</span><br><br><span class="hljs-comment">// https://en.wikipedia.org/wiki/SOCKS#SOCKS5</span><br><span class="hljs-comment">// For METHODS:</span><br><span class="hljs-comment">// 0x00 NO AUTHENTICATION REQUIRED</span><br><span class="hljs-comment">// 0x02 USERNAME/PASSWORD https://datatracker.ietf.org/doc/html/rfc1929</span><br><span class="hljs-keyword">const</span> socksGreeting = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>]);<br><br><span class="hljs-keyword">const</span> writer = socket.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(socksGreeting);<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;sent socks greeting&#x27;</span>);<br><br><span class="hljs-keyword">const</span> reader = socket.<span class="hljs-property">readable</span>.<span class="hljs-title function_">getReader</span>();<br><span class="hljs-keyword">const</span> encoder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextEncoder</span>();<br><span class="hljs-keyword">let</span> res = (<span class="hljs-keyword">await</span> reader.<span class="hljs-title function_">read</span>()).<span class="hljs-property">value</span>;<br><span class="hljs-comment">// Response format (Socks Server -&gt; Worker):</span><br><span class="hljs-comment">// +----+--------+</span><br><span class="hljs-comment">// |VER | METHOD |</span><br><span class="hljs-comment">// +----+--------+</span><br><span class="hljs-comment">// | 1  |   1    |</span><br><span class="hljs-comment">// +----+--------+</span><br><span class="hljs-keyword">if</span> (res[<span class="hljs-number">0</span>] !== <span class="hljs-number">0x05</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`socks server version error: <span class="hljs-subst">$&#123;res[<span class="hljs-number">0</span>]&#125;</span> expected: 5`</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (res[<span class="hljs-number">1</span>] === <span class="hljs-number">0xff</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;no acceptable methods&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-comment">// if return 0x0502</span><br><span class="hljs-keyword">if</span> (res[<span class="hljs-number">1</span>] === <span class="hljs-number">0x02</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;socks server needs auth&quot;</span>);<br><span class="hljs-keyword">if</span> (!username || !password) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;please provide username/password&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-comment">// +----+------+----------+------+----------+</span><br><span class="hljs-comment">// |VER | ULEN |  UNAME   | PLEN |  PASSWD  |</span><br><span class="hljs-comment">// +----+------+----------+------+----------+</span><br><span class="hljs-comment">// | 1  |  1   | 1 to 255 |  1   | 1 to 255 |</span><br><span class="hljs-comment">// +----+------+----------+------+----------+</span><br><span class="hljs-keyword">const</span> authRequest = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<br><span class="hljs-number">1</span>,<br>username.<span class="hljs-property">length</span>,<br>...encoder.<span class="hljs-title function_">encode</span>(username),<br>password.<span class="hljs-property">length</span>,<br>...encoder.<span class="hljs-title function_">encode</span>(password)<br>]);<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(authRequest);<br>res = (<span class="hljs-keyword">await</span> reader.<span class="hljs-title function_">read</span>()).<span class="hljs-property">value</span>;<br><span class="hljs-comment">// expected 0x0100</span><br><span class="hljs-keyword">if</span> (res[<span class="hljs-number">0</span>] !== <span class="hljs-number">0x01</span> || res[<span class="hljs-number">1</span>] !== <span class="hljs-number">0x00</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fail to auth socks server&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// Request data format (Worker -&gt; Socks Server):</span><br><span class="hljs-comment">// +----+-----+-------+------+----------+----------+</span><br><span class="hljs-comment">// |VER | CMD |  RSV  | ATYP | DST.ADDR | DST.PORT |</span><br><span class="hljs-comment">// +----+-----+-------+------+----------+----------+</span><br><span class="hljs-comment">// | 1  |  1  | X&#x27;00&#x27; |  1   | Variable |    2     |</span><br><span class="hljs-comment">// +----+-----+-------+------+----------+----------+</span><br><span class="hljs-comment">// ATYP: address type of following address</span><br><span class="hljs-comment">// 0x01: IPv4 address</span><br><span class="hljs-comment">// 0x03: Domain name</span><br><span class="hljs-comment">// 0x04: IPv6 address</span><br><span class="hljs-comment">// DST.ADDR: desired destination address</span><br><span class="hljs-comment">// DST.PORT: desired destination port in network octet order</span><br><br><span class="hljs-comment">// addressType</span><br><span class="hljs-comment">// 1--&gt; ipv4  addressLength =4</span><br><span class="hljs-comment">// 2--&gt; domain name</span><br><span class="hljs-comment">// 3--&gt; ipv6  addressLength =16</span><br><span class="hljs-keyword">let</span> <span class="hljs-variable constant_">DSTADDR</span>;<span class="hljs-comment">// DSTADDR = ATYP + DST.ADDR</span><br><span class="hljs-keyword">switch</span> (addressType) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br><span class="hljs-variable constant_">DSTADDR</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>[<span class="hljs-number">1</span>, ...addressRemote.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;.&#x27;</span>).<span class="hljs-title function_">map</span>(<span class="hljs-title class_">Number</span>)]<br>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br><span class="hljs-variable constant_">DSTADDR</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>[<span class="hljs-number">3</span>, addressRemote.<span class="hljs-property">length</span>, ...encoder.<span class="hljs-title function_">encode</span>(addressRemote)]<br>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br><span class="hljs-variable constant_">DSTADDR</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>[<span class="hljs-number">4</span>, ...addressRemote.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;:&#x27;</span>).<span class="hljs-title function_">flatMap</span>(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> [<span class="hljs-built_in">parseInt</span>(x.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>), <span class="hljs-number">16</span>), <span class="hljs-built_in">parseInt</span>(x.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>), <span class="hljs-number">16</span>)])]<br>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-attr">default</span>:<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`invild  addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">const</span> socksRequest = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, ...<span class="hljs-variable constant_">DSTADDR</span>, portRemote &gt;&gt; <span class="hljs-number">8</span>, portRemote &amp; <span class="hljs-number">0xff</span>]);<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(socksRequest);<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;sent socks request&#x27;</span>);<br><br>res = (<span class="hljs-keyword">await</span> reader.<span class="hljs-title function_">read</span>()).<span class="hljs-property">value</span>;<br><span class="hljs-comment">// Response format (Socks Server -&gt; Worker):</span><br><span class="hljs-comment">//  +----+-----+-------+------+----------+----------+</span><br><span class="hljs-comment">// |VER | REP |  RSV  | ATYP | BND.ADDR | BND.PORT |</span><br><span class="hljs-comment">// +----+-----+-------+------+----------+----------+</span><br><span class="hljs-comment">// | 1  |  1  | X&#x27;00&#x27; |  1   | Variable |    2     |</span><br><span class="hljs-comment">// +----+-----+-------+------+----------+----------+</span><br><span class="hljs-keyword">if</span> (res[<span class="hljs-number">1</span>] === <span class="hljs-number">0x00</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;socks connection opened&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;fail to open socks connection&quot;</span>);<br><span class="hljs-keyword">return</span>;<br>&#125;<br>writer.<span class="hljs-title function_">releaseLock</span>();<br>reader.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span> socket;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">address</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">socks5AddressParser</span>(<span class="hljs-params">address</span>) &#123;<br><span class="hljs-keyword">let</span> [latter, former] = address.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;@&quot;</span>).<span class="hljs-title function_">reverse</span>();<br><span class="hljs-keyword">let</span> username, password, hostname, port;<br><span class="hljs-keyword">if</span> (former) &#123;<br><span class="hljs-keyword">const</span> formers = former.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;:&quot;</span>);<br><span class="hljs-keyword">if</span> (formers.<span class="hljs-property">length</span> !== <span class="hljs-number">2</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;Invalid SOCKS address format&#x27;</span>);<br>&#125;<br>[username, password] = formers;<br>&#125;<br><span class="hljs-keyword">const</span> latters = latter.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;:&quot;</span>);<br>port = <span class="hljs-title class_">Number</span>(latters.<span class="hljs-title function_">pop</span>());<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">isNaN</span>(port)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;Invalid SOCKS address format&#x27;</span>);<br>&#125;<br>hostname = latters.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;:&quot;</span>);<br><span class="hljs-keyword">const</span> regex = <span class="hljs-regexp">/^\[.*\]$/</span>;<br><span class="hljs-keyword">if</span> (hostname.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;:&quot;</span>) &amp;&amp; !regex.<span class="hljs-title function_">test</span>(hostname)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;Invalid SOCKS address format&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> &#123;<br>username,<br>password,<br>hostname,<br>port,<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">revertFakeInfo</span>(<span class="hljs-params">content, userID, hostName, isBase64</span>) &#123;<br><span class="hljs-keyword">if</span> (isBase64) content = <span class="hljs-title function_">atob</span>(content);<span class="hljs-comment">//Base64解码</span><br>content = content.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(fakeUserID, <span class="hljs-string">&#x27;g&#x27;</span>), userID).<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(fakeHostName, <span class="hljs-string">&#x27;g&#x27;</span>), hostName);<br><span class="hljs-keyword">if</span> (isBase64) content = <span class="hljs-title function_">btoa</span>(content);<span class="hljs-comment">//Base64编码</span><br><br><span class="hljs-keyword">return</span> content;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">generateRandomNumber</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> minNum = <span class="hljs-number">100000</span>;<br><span class="hljs-keyword">let</span> maxNum = <span class="hljs-number">999999</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (maxNum - minNum + <span class="hljs-number">1</span>)) + minNum;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">generateRandomString</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> minLength = <span class="hljs-number">2</span>;<br><span class="hljs-keyword">let</span> maxLength = <span class="hljs-number">3</span>;<br><span class="hljs-keyword">let</span> length = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (maxLength - minLength + <span class="hljs-number">1</span>)) + minLength;<br><span class="hljs-keyword">let</span> characters = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span>;<br><span class="hljs-keyword">let</span> result = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; length; i++) &#123;<br>result += characters[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * characters.<span class="hljs-property">length</span>)];<br>&#125;<br><span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">generateUUID</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> uuid = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;<br><span class="hljs-keyword">let</span> num = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">16</span>);<br><span class="hljs-keyword">if</span> (num &lt; <span class="hljs-number">10</span>) &#123;<br>uuid += num;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>uuid += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(num + <span class="hljs-number">55</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> uuid.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/(.&#123;8&#125;)(.&#123;4&#125;)(.&#123;4&#125;)(.&#123;4&#125;)(.&#123;12&#125;)/</span>, <span class="hljs-string">&#x27;$1-$2-$3-$4-$5&#x27;</span>).<span class="hljs-title function_">toLowerCase</span>();<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">userID</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string | null</span>&#125; <span class="hljs-variable">hostName</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">sub</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; <span class="hljs-variable">userAgent</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;string&gt;</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getVLESSConfig</span>(<span class="hljs-params">userID, hostName, sub, userAgent, RproxyIP</span>) &#123;<br><span class="hljs-comment">// 如果sub为空，则显示原始内容</span><br><span class="hljs-keyword">if</span> (!sub || sub === <span class="hljs-string">&#x27;&#x27;</span>) &#123;<br><span class="hljs-keyword">const</span> vlessMain = <span class="hljs-string">`vless://<span class="hljs-subst">$&#123;userID&#125;</span>@<span class="hljs-subst">$&#123;hostName&#125;</span>:443?encryption=none&amp;security=tls&amp;sni=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;fp=randomized&amp;type=ws&amp;host=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;path=%2F%3Fed%3D2048#<span class="hljs-subst">$&#123;hostName&#125;</span>`</span>;<br>  <br><span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">v2ray</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string"><span class="hljs-subst">$&#123;vlessMain&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">clash-meta</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">- type: vless</span><br><span class="hljs-string">  name: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  server: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  port: 443</span><br><span class="hljs-string">  uuid: <span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">  network: ws</span><br><span class="hljs-string">  tls: true</span><br><span class="hljs-string">  udp: false</span><br><span class="hljs-string">  sni: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  client-fingerprint: chrome</span><br><span class="hljs-string">  ws-opts:</span><br><span class="hljs-string">    path: &quot;/?ed=2048&quot;</span><br><span class="hljs-string">    headers:</span><br><span class="hljs-string">  host: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">`</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sub &amp;&amp; userAgent.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;mozilla&#x27;</span>) &amp;&amp; !userAgent.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;linux x86&#x27;</span>)) &#123;<br><span class="hljs-keyword">const</span> vlessMain = <span class="hljs-string">`vless://<span class="hljs-subst">$&#123;userID&#125;</span>@<span class="hljs-subst">$&#123;hostName&#125;</span>:443?encryption=none&amp;security=tls&amp;sni=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;fp=randomized&amp;type=ws&amp;host=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;path=%2F%3Fed%3D2048#<span class="hljs-subst">$&#123;hostName&#125;</span>`</span>;<br><br><span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">Subscribe / sub 订阅地址, 支持 Base64、clash-meta、sing-box 订阅格式, 您的订阅内容由 <span class="hljs-subst">$&#123;sub&#125;</span> 提供维护支持, 自动获取ProxyIP: <span class="hljs-subst">$&#123;RproxyIP&#125;</span>.</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">https://<span class="hljs-subst">$&#123;hostName&#125;</span>/<span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">v2ray</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string"><span class="hljs-subst">$&#123;vlessMain&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">clash-meta</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">- type: vless</span><br><span class="hljs-string">  name: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  server: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  port: 443</span><br><span class="hljs-string">  uuid: <span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">  network: ws</span><br><span class="hljs-string">  tls: true</span><br><span class="hljs-string">  udp: false</span><br><span class="hljs-string">  sni: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  client-fingerprint: chrome</span><br><span class="hljs-string">  ws-opts:</span><br><span class="hljs-string">path: &quot;/?ed=2048&quot;</span><br><span class="hljs-string">headers:</span><br><span class="hljs-string">  host: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">telegram 交流群 技术大佬~在线发牌!</span><br><span class="hljs-string">https://t.me/CMLiussss</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">github 项目地址 Star!Star!Star!!!</span><br><span class="hljs-string">https://github.com/cmliu/edgetunnel</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">`</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> fetch != <span class="hljs-string">&#x27;function&#x27;</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Error: fetch is not available in this environment.&#x27;</span>;<br>&#125;<br><span class="hljs-comment">// 如果是使用默认域名，则改成一个workers的域名，订阅器会加上代理</span><br><span class="hljs-keyword">if</span> (hostName.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;.workers.dev&quot;</span>) || hostName.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&quot;.pages.dev&quot;</span>))&#123;<br>fakeHostName = <span class="hljs-string">`<span class="hljs-subst">$&#123;fakeHostName&#125;</span>.<span class="hljs-subst">$&#123;generateRandomString()&#125;</span><span class="hljs-subst">$&#123;generateRandomNumber()&#125;</span>.workers.dev`</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>fakeHostName = <span class="hljs-string">`<span class="hljs-subst">$&#123;fakeHostName&#125;</span>.<span class="hljs-subst">$&#123;generateRandomNumber()&#125;</span>.xyz`</span><br>&#125;<br><span class="hljs-keyword">let</span> content = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">let</span> url = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">let</span> isBase64 = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (userAgent.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;clash&#x27;</span>)) &#123;<br>url = <span class="hljs-string">`https://<span class="hljs-subst">$&#123;subconverter&#125;</span>/sub?target=clash&amp;url=https%3A%2F%2F<span class="hljs-subst">$&#123;sub&#125;</span>%2Fsub%3Fhost%3D<span class="hljs-subst">$&#123;fakeHostName&#125;</span>%26uuid%3D<span class="hljs-subst">$&#123;fakeUserID&#125;</span>%26edgetunnel%3Dcmliu%26proxyip%3D<span class="hljs-subst">$&#123;RproxyIP&#125;</span>&amp;insert=false&amp;config=<span class="hljs-subst">$&#123;<span class="hljs-built_in">encodeURIComponent</span>(subconfig)&#125;</span>&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true`</span>;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (userAgent.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;sing-box&#x27;</span>) || userAgent.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;singbox&#x27;</span>)) &#123;<br>url = <span class="hljs-string">`https://<span class="hljs-subst">$&#123;subconverter&#125;</span>/sub?target=singbox&amp;url=https%3A%2F%2F<span class="hljs-subst">$&#123;sub&#125;</span>%2Fsub%3Fhost%3D<span class="hljs-subst">$&#123;fakeHostName&#125;</span>%26uuid%3D<span class="hljs-subst">$&#123;fakeUserID&#125;</span>%26edgetunnel%3Dcmliu%26proxyip%3D<span class="hljs-subst">$&#123;RproxyIP&#125;</span>&amp;insert=false&amp;config=<span class="hljs-subst">$&#123;<span class="hljs-built_in">encodeURIComponent</span>(subconfig)&#125;</span>&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true`</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>url = <span class="hljs-string">`https://<span class="hljs-subst">$&#123;sub&#125;</span>/sub?host=<span class="hljs-subst">$&#123;fakeHostName&#125;</span>&amp;uuid=<span class="hljs-subst">$&#123;fakeUserID&#125;</span>&amp;edgetunnel=cmliu&amp;proxyip=<span class="hljs-subst">$&#123;RproxyIP&#125;</span>`</span>;<br>isBase64 = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(url ,&#123;<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;CF-Workers-edgetunnel/cmliu&#x27;</span><br>&#125;&#125;);<br>content = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">text</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">revertFakeInfo</span>(content, userID, hostName, isBase64);<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Error fetching content:&#x27;</span>, error);<br><span class="hljs-keyword">return</span> <span class="hljs-string">`Error fetching content: <span class="hljs-subst">$&#123;error.message&#125;</span>`</span>;<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何利用Azure学生优惠实现IPv6校园网免费上网</title>
    <link href="/2024/11/12/2024_11_12/"/>
    <url>/2024/11/12/2024_11_12/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>国内很多大学校园网有IPv6流量不计费的计费规则，网络上相关教程多以购买代理服务器为主，无法做到完全的免费，所以笔者在研究了大量资料后整合成一篇指路帖，希望能帮到各位。<br>国内大学的校园网大多属于CERNET，对Azure的访问不做管控，但是家里的网络连接Azure是很容易被管控，导致无法连接的，所以此方法只推荐在学校里用</p><h1 id="提醒"><a href="#提醒" class="headerlink" title="提醒"></a>提醒</h1><p>完成本教程需要有基本的搜索引擎使用能力，遇到不懂的地方多加搜索</p><h1 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h1><p>利用Microsoft Azure对大学生的优惠政策，白嫖每年100 USD的免费额度用于免费上网，初步预计这些额度大约可换算为每年1500 GB免费流量，而且另一个好处是可以兼任科学上网软件<br>本文是指路帖，整合了一些我在搭建梯子时觉得有用的教程，仅供参考</p><h1 id="教程正文"><a href="#教程正文" class="headerlink" title="教程正文"></a>教程正文</h1><h2 id="一、注册Azure并申请学生订阅"><a href="#一、注册Azure并申请学生订阅" class="headerlink" title="一、注册Azure并申请学生订阅"></a>一、注册Azure并申请学生订阅</h2><p>这部分网上教程很多，此处给出一篇我使用的教程<br><a href="https://zhuanlan.zhihu.com/p/629311513?utm_id=0">教程传送门</a><br>注意务必使用学校的邮箱，也就是结尾带有<code>edu.cn</code>的邮箱</p><h2 id="二、部署免费的Linux虚拟机，创建网络接口，配置IP"><a href="#二、部署免费的Linux虚拟机，创建网络接口，配置IP" class="headerlink" title="二、部署免费的Linux虚拟机，创建网络接口，配置IP"></a>二、部署免费的Linux虚拟机，创建网络接口，配置IP</h2><p>这部分建议两篇教程一起看<br><a href="https://blog.csdn.net/qq_33177599/article/details/132333921">本篇着重于Azure的各项资源配置</a>，着重阅读1，2两部分<br><a href="https://www.bilibili.com/opus/795942562169880600">本篇着重于创建虚拟机和基本的虚拟机操作</a>，着重阅读除三、四两部分以外的所有内容，也就是除了创建虚拟机以外的所有内容<br><strong>注意</strong><br><strong>公共IP地址优先选静态的，IPv4地址后期可以删掉，不会计费，如果选了动态就不能关闭虚拟机</strong><br><strong>虚拟机系统笔者选用了Linux(ubuntu 22.04)，不收费</strong></p><h2 id="三、虚拟机软件配置，转接流量至Azure虚拟机"><a href="#三、虚拟机软件配置，转接流量至Azure虚拟机" class="headerlink" title="三、虚拟机软件配置，转接流量至Azure虚拟机"></a>三、虚拟机软件配置，转接流量至Azure虚拟机</h2><p>这里请出我们大名鼎鼎的极星网<br><a href="https://www.jixing.one/vps/v2ray-xui-v2rayn/">教程传送门</a>（其中PuTTY软件可以略过，前面的教程里有讲解如何连接到虚拟机）<br><strong>注意：以下部分若出现文中未提及的报错，请自行搜索资料，笔者可能疏漏了某些细节，但是一定可以在网上找到对应解决方法</strong></p><p>极星网的教程里使用的系统是CentOS，由于该系统已经多年无人维护，所以在创建虚拟机的时候我们选用了现今仍在使用的Ubuntu，所以<strong>更新及安装组件</strong>处三个yum指令是无法使用的。<br>修改为：<br><code>apt -y update &amp;&amp; apt -y install curl socat</code></p><p>安装X-ui面板的指令可以直接使用<br>开放端口的指令可以直接使用</p><p>开启BBR加速的部分改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.core.default_qdisc=fq&quot;</span> | <span class="hljs-built_in">sudo</span> <span class="hljs-built_in">tee</span> -a /etc/sysctl.conf <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> | <span class="hljs-built_in">sudo</span> <span class="hljs-built_in">tee</span> -a /etc/sysctl.conf<br><span class="hljs-built_in">sudo</span> sysctl -p<br></code></pre></td></tr></table></figure><p><strong>注意：三行指令需要分别执行</strong></p><p>验证BBR加速的指令可以直接使用</p><p>重启可以终端里reboot，也可以去azure控制面板直接重启</p><p>后续部分完全按照极星网教程即可</p><p>*<em>注意：Vmess服务器地址用Azure虚拟机的</em>公用IP地址(IPv6)<em>，注意不要带上后面的括号内容</em>*</p><h2 id="四、删除公共IPv4地址防止收费"><a href="#四、删除公共IPv4地址防止收费" class="headerlink" title="四、删除公共IPv4地址防止收费"></a>四、删除公共IPv4地址防止收费</h2><p>直接进入Azure控制面板删除即可，如果报错就跟着报错内容一点点修改，一般报错多为忘记与某某资源解绑，一定是可以删掉的</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>现今大学生每月使用流量的需求越来越大，同时为了一些学业资源也需要科学上网，希望此教程能帮到各位大学生<br>Azure的学生认证理论上每年（365天）进行一次，注意自己的学生邮箱，官方会把年度认证网址发到邮箱里，但是据一些说法来看认证并不一定每年进行，总而言之还是多关注一下学生邮箱<br>计划再写一篇基于Cloudflare的免流帖子，待资料整理好后会写出来</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
